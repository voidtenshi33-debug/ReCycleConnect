
{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user profile in the ReCycleConnect application.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The unique ID from Firebase Authentication."
        },
        "displayName": {
          "type": "string",
          "description": "The user's full name."
        },
        "photoURL": {
          "type": "string",
          "description": "The URL to the user's profile picture. This can be null or empty if they don't have one.",
          "format": "uri"
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "phoneNumber": {
          "type": "string",
          "description": "The user's phone number."
        },
        "createdAt": {
          "type": "string",
          "description": "The date the user joined.",
          "format": "date-time"
        },
        "lastKnownLocality": {
          "type": "string",
          "description": "The user's last selected locality for browsing items."
        },
        "averageRating": {
          "type": "number",
          "description": "The user's average rating from 1 to 5."
        },
        "ratingsCount": {
          "type": "number",
          "description": "The total number of ratings the user has received."
        },
        "isTrusted": {
            "type": "boolean",
            "description": "Whether the user is a trusted seller."
        },
        "wishlist": {
            "type": "array",
            "description": "An array of item IDs that the user has wishlisted.",
            "items": {
                "type": "string"
            }
        }
      },
      "required": [
        "userId",
        "displayName",
        "email",
        "createdAt"
      ]
    },
    "Item": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Item",
      "type": "object",
      "description": "Represents an item listed for exchange on ReCycleConnect.",
      "properties": {
        "title": { "type": "string" },
        "description": { "type": "string" },
        "imageUrls": { "type": "array", "items": { "type": "string", "format": "uri" } },
        "category": { "type": "string" },
        "brand": { "type": "string" },
        "condition": { "type": "string", "enum": ["Working", "Needs Minor Repair", "For Spare Parts Only"] },
        "listingType": { "type": "string", "enum": ["Sell", "Donate"] },
        "price": { "type": "number" },
        "locality": { "type": "string", "description": "The locality slug e.g. 'kothrud'" },
        "createdAt": { "type": "string", "format": "date-time" },
        "ownerId": { "type": "string" },
        "ownerName": { "type": "string" },
        "ownerAvatarUrl": { "type": "string", "format": "uri" },
        "ownerRating": { "type": "number" },
        "status": { "type": "string", "enum": ["Available", "In Process", "Completed", "Reserved"] },
        "isFeatured": { "type": "boolean" }
      },
      "required": ["title", "description", "category", "condition", "listingType", "price", "locality", "createdAt", "ownerId", "ownerName", "status"]
    },
     "Conversation": {
      "title": "Conversation",
      "type": "object",
      "description": "Represents a chat session between two users about a specific item.",
      "properties": {
        "participants": {
          "type": "array",
          "items": { "type": "string" },
          "description": "An array containing the user IDs of the two participants."
        },
        "itemId": {
          "type": "string",
          "description": "The ID of the item this conversation is about."
        },
        "lastMessage": {
          "type": "string",
          "description": "A snippet of the last message sent in the chat."
        },
        "lastMessageTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the last message."
        },
        "unreadCount": {
          "type": "object",
          "description": "An object tracking unread message counts for each user.",
          "additionalProperties": { "type": "number" }
        }
      },
      "required": ["participants", "itemId", "lastMessageTimestamp"]
    },
    "ChatMessage": {
      "title": "ChatMessage",
      "type": "object",
      "description": "Represents a single message within a conversation.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The content of the message."
        },
        "senderId": {
          "type": "string",
          "description": "The user ID of the person who sent the message."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The server timestamp when the message was sent."
        },
        "isRead": {
          "type": "boolean",
          "description": "Whether the message has been read by the recipient."
        }
      },
      "required": ["text", "senderId", "timestamp"]
    },
    "ExchangeRequest": {
      "title": "ExchangeRequest",
      "type": "object",
      "description": "Tracks the state of a transaction between a buyer and a seller for a specific item.",
      "properties": {
        "itemId": {
          "type": "string"
        },
        "requesterId": {
          "type": "string"
        },
        "sellerId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Accepted",
            "Rejected",
            "Completed"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "itemId",
        "requesterId",
        "sellerId",
        "status",
        "createdAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": { "$ref": "#/backend/entities/UserProfile" },
          "description": "Stores user profile information. The document ID is the Firebase Authentication UID (`userId`)."
        }
      },
      {
        "path": "/items/{itemId}",
        "definition": {
          "entityName": "Item",
          "schema": { "$ref": "#/backend/entities/Item" },
          "description": "Stores all items listed on the platform."
        }
      },
      {
          "path": "/conversations/{conversationId}",
          "definition": {
              "entityName": "Conversation",
              "schema": { "$ref": "#/backend/entities/Conversation" },
              "description": "Top-level collection for chat sessions."
          }
      },
      {
          "path": "/conversations/{conversationId}/messages/{messageId}",
          "definition": {
              "entityName": "ChatMessage",
              "schema": { "$ref": "#/backend/entities/ChatMessage" },
              "description": "Sub-collection for messages within a specific chat."
          }
      },
      {
        "path": "/exchanges/{exchangeId}",
        "definition": {
            "entityName": "ExchangeRequest",
            "schema": { "$ref": "#/backend/entities/ExchangeRequest" },
            "description": "Stores transaction requests between users."
        }
      }
    ],
    "reasoning": "The Firestore data structure is designed to support the ReCycleConnect application's core features. The `users` collection stores public profiles. The `items` collection holds all listings. The `conversations` collection is introduced to manage chat sessions between users, with a `messages` sub-collection for individual messages. This nested approach is efficient for loading a specific chat's history. Denormalizing fields like `lastMessage` and `unreadCount` in the parent `conversations` document allows for efficient loading of the chat list view without needing to query sub-collections. The `exchanges` collection tracks the state of transactions."
  }
}

    